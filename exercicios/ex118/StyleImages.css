/*

Imagens de estilo CSS

Aprenda como estilizar imagens usando CSS.

Imagens arredondadas
Use a border-radiuspropriedade para criar imagens arredondadas:

*/

.img1 {
    border-radius: 8px;
}

.img2 {
    border-radius: 50%;
}

/*

Imagens em miniatura
Use a borderpropriedade para criar imagens em miniatura.

*/

.img3 {
    border: 1px solid #ddd;
    border-radius: 4px;
    padding: 5px;
    width: 150px;
}

.img4 {
    border: 1px solid #ddd;
    border-radius: 4px;
    padding: 5px;
    width: 150px;
}

.img4:hover {
    box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);
}

/*

Imagens responsivas
As imagens responsivas se ajustarão automaticamente ao tamanho da tela.

Redimensione a janela do navegador para ver o efeito:

Cinque Terre
Se você quiser que uma imagem diminua se necessário, mas nunca aumente para ser maior que seu tamanho original, adicione o seguinte:

*/

.img5 {
    max-width: 100%;
    height: auto;
}

/*

Centralizar uma imagem
Para centralizar uma imagem, defina as margens esquerda e direita autoe transforme-a em um blockelemento:

*/

.img6 {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

/*

Imagens/Cartões Polaroid

*/

body {
    margin: 25px;
}

div.polaroid {
    width: 80%;
    background-color: white;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    margin-bottom: 25px;
}

div.container {
    text-align: center;
    padding: 10px 20px;
}

/*

Imagem transparente
A opacitypropriedade pode ter um valor de 0,0 a 1,0. Quanto menor o valor, mais transparente:

*/

.img7 {
    opacity: 0.5;
}

/*

Texto da imagem
Como posicionar o texto em uma imagem:

*/

.container1 {
    position: relative;
}

.topleft {
    position: absolute;
    top: 8px;
    left: 16px;
    font-size: 18px;
}

.topright {
    position: absolute;
    top: 8px;
    right: 16px;
    font-size: 18px;
}

.bottomleft {
    position: absolute;
    bottom: 8px;
    left: 16px;
    font-size: 18px;
}

.bottomright {
    position: absolute;
    bottom: 8px;
    right: 16px;
    font-size: 18px;
}

.center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.img8 {
    width: 100%;
    height: auto;
    opacity: 0.3;
}

/*

Filtros de imagem
A propriedade CSS filteradiciona efeitos visuais (como desfoque e saturação) a um elemento.

Observação: a propriedade de filtro não tem suporte no Internet Explorer ou no Edge 12.

Exemplo
Altere a cor de todas as imagens para preto e branco (100% cinza):

*/

#img9 {
    width: 33%;
    height: auto;

}

.bluer {
    filter: blur(4px);
}

.brightness {
    filter: brightness(250%);
}

.contrast {
    filter: contrast(100%);
}

.grayscale {
    filter: grayscale(100%);
}

.huerotate {
    filter: hue-rotate(180deg);
}

.invert {
    filter: invert(100%);
}

.opacity {
    filter: opacity(50%);
}

.saturate {
    filter: saturate(7);
}

.sepia {
    filter: sepia(100%);
}

.shadow {
    filter: drop-shadow(8px 8px 10px green);
}

/*

Sobreposição de imagem ao passar o mouse
Crie um efeito de sobreposição ao passar o mouse:

Exemplo
Desvanecer no texto:

*/

.container2 {
    position: relative;
    width: 50%;
}

.image {
    display: block;
    width: 100%;
    height: auto;
}

.overlay {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    height: 100%;
    width: 100%;
    opacity: 0;
    transition: .5s ease;
    background-color: #008CBA;
}

.container2:hover .overlay{
    opacity: 1;
}

.text {
    color: white;
    font-size: 20px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
}

.image1 {
    opacity: 1;
    display: block;
    width: 100%;
    height: auto;
    transition: .5s ease;
    backface-visibility: hidden;
}

.middle {
    transition: .5s ease;
    opacity: 0;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%)
}

.container2:hover .image1 {
    opacity: 0.3;
  }
  
.container2:hover .middle {
    opacity: 1;
}

.text1 {
    background-color: #4CAF50;
    color: white;
    font-size: 16px;
    padding: 16px 32px;
}

.overlay1 {
    position: absolute;
    bottom: 100%;
    left: 0;
    right: 0;
    background-color: #008CBA;
    overflow: hidden;
    width: 100%;
    height: 0;
    transition: .5s ease;
}

.container2:hover .overlay1 {
    bottom: 0;
    height: 100%;
}

.text2 {
    white-space: nowrap; 
    color: white;
    font-size: 20px;
    position: absolute;
    overflow: hidden;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
}

.overlay2 {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: #008CBA;
    overflow: hidden;
    width: 100%;
    height: 0;
    transition: .5s ease;
}

.container2:hover .overlay2 {
    height: 100%;
}

.overlay3 {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: #008CBA;
    overflow: hidden;
    width: 0;
    height: 100%;
    transition: .5s ease;
}

.container2:hover .overlay3 {
    width: 100%;
}

.overlay4 {
    position: absolute;
    bottom: 0;
    left: 100%;
    right: 0;
    background-color: #008CBA;
    overflow: hidden;
    width: 0;
    height: 100%;
    transition: .5s ease;
}

.container2:hover .overlay4 {
    width: 100%;
    left: 0;
}

/*

Virar uma imagem
Passe o mouse sobre a imagem:

*/

.img11:hover {
    transform: scaleX(-1);
}

/*

Galeria de imagens responsivas
CSS pode ser usado para criar galerias de imagens. Este exemplo usa consultas de mídia para reorganizar as imagens em diferentes tamanhos de tela. Redimensione a janela do navegador para ver o efeito:

*/

div.gallery {
    border: 1px solid #ccc;
}

div.gallery:hover {
    border: 1px solid #777;
}

div.gallery img {
    width: 100%;
    height: auto;
}

div.desc {
    padding: 15px;
    text-align: center;
}

* {
    box-sizing: border-box;
}

.reponsive {
    padding: 0 6px;
    float: left;
    width: 24.99999%;
}

@media only screen and (max-width:700px) {
    .reponsive {
        width: 49.99999%;
        margin: 6px 0;
    }
}

@media only screen and (max-width: 500px) {
    .reponsive {
        width: 100%;
    }
}

.clearfx:after {
    content: "";
    display: table;
    clear: both;
}

/*

Modal de Imagem (Avançado)
Este é um exemplo para demonstrar como CSS e JavaScript podem trabalhar juntos.

Primeiro, use CSS para criar uma janela modal (caixa de diálogo) e oculte-a por padrão.

Em seguida, use um JavaScript para mostrar a janela modal e exibir a imagem dentro do modal, quando um usuário clicar na imagem:

*/

#myImg {
    border-radius: 5px;
    cursor: pointer;
    transition: 0.3s;
}

#myImg:hover {
    opacity: 0.7;
}

/* The modal (background) */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit in place */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0, 0, 0); /* Fallback color */
    background-color: rgba(0, 0, 0, 0.9); /* Black w/opacity */
}

/* Modal Content (image) */
.modal-content {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
}

/* Caption of Modal Image */ 
#caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: #ccc;
    padding: 10px 0;
    height: 150px;
}

/* Add Animation */
.modal-content, #caption {
    animation-name: zoom;
    animation-duration: 0.6s;
}

@keyframes zoom {
    from {
        transform: scale(0.1);
    }
    to {
        transform: scale(1);
    }
}

/* The close button */
.close {
    position: absolute;
    top: 15px;
    right: 35px;
    color: #f1f1f1;
    font-size: 40px;
    font-weight: bold;
    transition: 0.3s;
}

.close:hover, .close:focus {
    color: #bbb;
    text-decoration: none;
    cursor: pointer;
}

/* 100% Image Width on Smaller Screens */
@media only screen and (max-width: 700px) {
    .modal-content{
        width: 100%;
    }
}