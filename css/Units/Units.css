/*

Unidades CSS
CSS tem várias unidades diferentes para expressar um comprimento.

Muitas propriedades CSS aceitam valores de "comprimento", como width, margin, padding, font-size, etc.

Comprimento é um número seguido por uma unidade de comprimento, como 10px, 2em, etc.

Exemplo
Defina diferentes valores de comprimento, usando px (pixels):

*/

h1 {
    font-size: 60px;
}

p {
    font-size: 25px;
    line-height: 50px
}

/*

Nota: Um espaço em branco não pode aparecer entre o número e a unidade. No entanto, se o valor for 0, a unidade pode ser omitida.

Para algumas propriedades CSS, comprimentos negativos são permitidos.

Existem dois tipos de unidades de comprimento: absolutas e relativas .

Comprimentos absolutos
As unidades de comprimento absoluto são fixas e um comprimento expresso em qualquer uma delas aparecerá exatamente com esse tamanho.

Unidades de comprimento absoluto não são recomendadas para uso na tela, porque os tamanhos das telas variam muito. No entanto, eles podem ser usados ​​se a mídia de saída for conhecida, como para layout de impressão.

*/

/* cm	centimeters */

.cm {
    font-size: 1cm;
}

/* mm millimeters */

.mm {
    font-size: 10mm;
}

/* in inches (1in = 96px = 2.54cm) */

.in {
    font-size: 0.5in;
}

/* px * pixels (1px = 1/96th of 1in) */

.px {
    font-size: 30px;
}

/* pt points (1pt = 1/72 of 1in) */

.pt {
    font-size: 25pt;
}

/* pc picas (1pc = 12 pt) */

.pc {
    font-size: 3pc;
}

/*

* Pixels (px) são relativos ao dispositivo de visualização. Para dispositivos de baixo dpi, 1px é um pixel de dispositivo (ponto) da tela. Para impressoras e telas de alta resolução, 1px implica em vários pixels de dispositivo.

Comprimentos relativos
As unidades de comprimento relativo especificam um comprimento relativo a outra propriedade de comprimento. As unidades de comprimento relativo são melhor dimensionadas entre diferentes mídias de renderização.

*/

/* em 	Relative to the font-size of the element (2em means 2 times the size of the current font) */

.em {
    font-size: 0.5em;
}

/* ex Relative to the x-height of the current font (rarely used) */

.ex {
    font-size: 1ex;
}

/* ch Relative to width of the "0" (zero) */

.ch {
    font-size: 3ch;
}

/* rem Relative to font-size of the root element */

.rem {
    font-size: 2rem;
}

/* vw Relative to 1% of the width of the viewport* */

.vw {
    font-size: 20vw;
}

/* vh 	Relative to 1% of the height of the viewport* */

.vh {
    font-size: 20vh; 
}

/* vmin Relative to 1% of viewport's* smaller dimension */

.vmin {
    font-size: 15vmin;
}

/* vmax	Relative to 1% of viewport's* larger dimension */

.vmax {
    font-size: 15vmax;
}

/* %	Relative to the parent element */

.perc {
    font-size: 150%;
}

/*

Dica: As unidades em e rem são práticas na criação de layouts perfeitamente escaláveis!
* Viewport = o tamanho da janela do navegador. Se a janela de visualização tiver 50 cm de largura, 1vw = 0,5 cm.

*/